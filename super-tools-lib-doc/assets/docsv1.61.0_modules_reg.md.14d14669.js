import{_ as e,c as t,o,N as a}from"./chunks/framework.a618ffea.js";const f=JSON.parse('{"title":"Module: reg","description":"","frontmatter":{},"headers":[],"relativePath":"docsv1.61.0/modules/reg.md"}'),d={name:"docsv1.61.0/modules/reg.md"},c=a('<p><a href="./../README.html">super-tools-lib - v1.61.0</a> / <a href="./../modules.html">Modules</a> / reg</p><h1 id="module-reg" tabindex="-1">Module: reg <a class="header-anchor" href="#module-reg" aria-label="Permalink to &quot;Module: reg&quot;">​</a></h1><h2 id="table-of-contents" tabindex="-1">Table of contents <a class="header-anchor" href="#table-of-contents" aria-label="Permalink to &quot;Table of contents&quot;">​</a></h2><h3 id="functions" tabindex="-1">Functions <a class="header-anchor" href="#functions" aria-label="Permalink to &quot;Functions&quot;">​</a></h3><ul><li><a href="./reg.html#validate">validate</a></li></ul><h2 id="functions-1" tabindex="-1">Functions <a class="header-anchor" href="#functions-1" aria-label="Permalink to &quot;Functions&quot;">​</a></h2><h3 id="validate" tabindex="-1">validate <a class="header-anchor" href="#validate" aria-label="Permalink to &quot;validate&quot;">​</a></h3><p>▸ <strong>validate</strong>(<code>key</code>, <code>value</code>): <code>boolean</code></p><p>验证内容</p><h4 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>key</code></td><td style="text-align:left;"><code>&quot;number&quot;</code> | <code>&quot;mobile&quot;</code> | <code>&quot;phone&quot;</code> | <code>&quot;chinese_and_english&quot;</code> | <code>&quot;chinese10&quot;</code> | <code>&quot;website&quot;</code> | <code>&quot;nickname&quot;</code> | <code>&quot;verify_code&quot;</code> | <code>&quot;verify_pwd&quot;</code> | <code>&quot;email&quot;</code> | <code>&quot;character&quot;</code> | <code>&quot;intNumber&quot;</code> | <code>&quot;positiveInt5&quot;</code> | <code>&quot;positiveInt3_decimal2&quot;</code> | <code>&quot;negativeInteger&quot;</code> | <code>&quot;isNotNegativeFloatNum&quot;</code> | <code>&quot;cP&quot;</code> | <code>&quot;cPattern&quot;</code> | <code>&quot;numeric_letters&quot;</code> | <code>&quot;chinese_numeric_letters&quot;</code> | <code>&quot;strong_password&quot;</code> | <code>&quot;cname&quot;</code> | <code>&quot;ename&quot;</code> | <code>&quot;ip&quot;</code> | <code>&quot;ipv4&quot;</code> | <code>&quot;color16Reg&quot;</code> | <code>&quot;mac&quot;</code></td><td style="text-align:left;">规则</td></tr><tr><td style="text-align:left;"><code>value</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">校验的内容</td></tr></tbody></table><h4 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>boolean</code></p>',13),r=[c];function l(u,n,i,s,q,h){return o(),t("div",null,r)}const _=e(d,[["render",l]]);export{f as __pageData,_ as default};

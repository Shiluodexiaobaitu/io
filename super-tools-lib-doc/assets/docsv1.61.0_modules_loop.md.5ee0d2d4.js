import{_ as e,c as t,o as a,N as o}from"./chunks/framework.a618ffea.js";const u=JSON.parse('{"title":"Module: loop","description":"","frontmatter":{},"headers":[],"relativePath":"docsv1.61.0/modules/loop.md"}'),l={name:"docsv1.61.0/modules/loop.md"},s=o(`<p><a href="./../README.html">super-tools-lib - v1.61.0</a> / <a href="./../modules.html">Modules</a> / loop</p><h1 id="module-loop" tabindex="-1">Module: loop <a class="header-anchor" href="#module-loop" aria-label="Permalink to &quot;Module: loop&quot;">​</a></h1><h2 id="table-of-contents" tabindex="-1">Table of contents <a class="header-anchor" href="#table-of-contents" aria-label="Permalink to &quot;Table of contents&quot;">​</a></h2><h3 id="collection-functions" tabindex="-1">Collection Functions <a class="header-anchor" href="#collection-functions" aria-label="Permalink to &quot;Collection Functions&quot;">​</a></h3><ul><li><a href="./loop.html#foreach">forEach</a></li></ul><h3 id="other-functions" tabindex="-1">Other Functions <a class="header-anchor" href="#other-functions" aria-label="Permalink to &quot;Other Functions&quot;">​</a></h3><ul><li><a href="./loop.html#filter">filter</a></li></ul><h2 id="collection-functions-1" tabindex="-1">Collection Functions <a class="header-anchor" href="#collection-functions-1" aria-label="Permalink to &quot;Collection Functions&quot;">​</a></h2><h3 id="foreach" tabindex="-1">forEach <a class="header-anchor" href="#foreach" aria-label="Permalink to &quot;forEach&quot;">​</a></h3><p>▸ <strong>forEach</strong>&lt;<code>T</code>&gt;(<code>data</code>, <code>iteratee</code>): <code>void</code></p><p>封装forEach</p><p><strong><code>Since</code></strong></p><p>1.0.0</p><p><strong><code>Example</code></strong></p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> arr </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> [</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">4</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">5</span><span style="color:#A6ACCD;">]</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">_</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">forEach</span><span style="color:#A6ACCD;">(arr</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">value</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">index</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;"> </span><span style="color:#676E95;font-style:italic;">// return false 终止循环</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><h4 id="type-parameters" tabindex="-1">Type parameters <a class="header-anchor" href="#type-parameters" aria-label="Permalink to &quot;Type parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th></tr></thead><tbody><tr><td style="text-align:left;"><code>T</code></td></tr></tbody></table><h4 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>data</code></td><td style="text-align:left;"><code>Record</code>&lt;<code>string</code>, <code>T</code>&gt; | <code>T</code>[]</td><td style="text-align:left;">用来迭代的数据</td></tr><tr><td style="text-align:left;"><code>iteratee</code></td><td style="text-align:left;">(<code>item</code>: <code>T</code>, <code>key?</code>: <code>string</code> | <code>number</code>) =&gt; <code>boolean</code> | <code>void</code></td><td style="text-align:left;">每次迭代调用的函数</td></tr></tbody></table><h4 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><hr><h2 id="other-functions-1" tabindex="-1">Other Functions <a class="header-anchor" href="#other-functions-1" aria-label="Permalink to &quot;Other Functions&quot;">​</a></h2><h3 id="filter" tabindex="-1">filter <a class="header-anchor" href="#filter" aria-label="Permalink to &quot;filter&quot;">​</a></h3><p>▸ <strong>filter</strong>&lt;<code>T</code>&gt;(<code>data</code>, <code>iteratee</code>): <code>T</code>[]</p><p>封装filter</p><h4 id="type-parameters-1" tabindex="-1">Type parameters <a class="header-anchor" href="#type-parameters-1" aria-label="Permalink to &quot;Type parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th></tr></thead><tbody><tr><td style="text-align:left;"><code>T</code></td></tr></tbody></table><h4 id="parameters-1" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-1" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>data</code></td><td style="text-align:left;"><code>Record</code>&lt;<code>string</code>, <code>T</code>&gt; | <code>T</code>[]</td><td style="text-align:left;">用来迭代的数据</td></tr><tr><td style="text-align:left;"><code>iteratee</code></td><td style="text-align:left;">(<code>item</code>: <code>T</code>, <code>key?</code>: <code>string</code> | <code>number</code>) =&gt; <code>boolean</code></td><td style="text-align:left;">每次迭代调用的函数</td></tr></tbody></table><h4 id="returns-1" tabindex="-1">Returns <a class="header-anchor" href="#returns-1" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>T</code>[]</p>`,32),n=[s];function r(c,d,p,i,h,y){return a(),t("div",null,n)}const m=e(l,[["render",r]]);export{u as __pageData,m as default};
